<?php
include_once(APPPATH.'models/base_model.php');
class Chat_rooms_model extends Base_model
{
	
	public function __construct() 
	{
		parent::__construct();
		$this->chat_db = $this->load->database('flashchat', TRUE);
	}

	
	public function get() {
		$sql = sprintf('SELECT * FROM '.$this->chat_db->CHAT_ROOM.' order by id desc');
		$query = $this->chat_db->query($sql);
		$result_arr = $query->result_array();

		return $result_arr;
	}
	
	
	public function get_by_id($id, $start_limit="", $no_of_page="") {
		if("$start_limit" == "") {
			$sql = sprintf('SELECT * FROM '.$this->chat_db->CHAT_ROOM.'  where room_id = %s',  $id);
		}
		else {
			$sql = sprintf('SELECT * FROM '.$this->chat_db->CHAT_ROOM.'  where room_id = %s limit %s, %s',  $id, $start_limit, $no_of_page);
		}
		$query = $this->chat_db->query($sql);
		$result_arr = $query->result_array();
		
		return $result_arr[0];
	}
	


	public function insert($arr=array()) {
		if(count($arr)==0) {
			return null;
		}
		$this->chat_db->insert($this->chat_db->CHAT_ROOM, $arr); //echo $this->db->last_query();
		return $this->chat_db->insert_id();
	}
	

	public function update($arr=array(), $id) {
		if(count($arr)==0) {
			return null;
		}
		
		$SQL = "UPDATE room
			    SET  name = '{$arr['name']}' , des = '{$arr['des']}'".$condition." WHERE room_id = " .$id;
	    $query = $this->chat_db->query($SQL);
		//echo $this->db->last_query(); exit;
	}
	

	public function delete_by_id($id) {
	
		## deleting ring cateory 
	     $sql = sprintf( 'DELETE FROM '.$this->chat_db->CHAT_ROOM.' WHERE room_id=%s', $id );
		 $this->chat_db->query($sql);
		#echo $this->db->last_query(); exit;
	}
	
	/*public function get_list($where='',$i_start=null,$i_limit=null,$s_order_by='')
    {
        
        $limit  = (is_numeric($i_start) && is_numeric($i_limit))?" Limit ".intval($i_start).",".intval($i_limit):'';
		$s_order_by = ($s_order_by != '')?'ORDER BY '.$s_order_by :'ORDER BY C.room_id DESC';
		
        $sql    = " SELECT C.*
					FROM {$this->chat_db->CHAT_ROOM} C 
					{$where}  {$s_order_by} {$limit}";

        $query     = $this->chat_db->query($sql); //echo $this->db->last_query();
        $result_arr = $query->result_array(); //pr($result_arr,1);
		
		
        return $result_arr;
    }
	
    public function get_list_count($where='')
    {
        
        
        $sql    = "SELECT count(*) as i_total FROM {$this->chat_db->CHAT_ROOM} C 
					
				  	{$where} ";
        $query     = $this->chat_db->query($sql); //echo $this->db->last_query();
        $result_arr = $query->result_array(); //pr($result_arr);
        return $result_arr[0]['i_total'];
    }*/
	
	public function get_list($where='',$i_start=null,$i_limit=null,$s_order_by='')
    {
        
        $limit  = (is_numeric($i_start) && is_numeric($i_limit))?" Limit ".intval($i_start).",".intval($i_limit):'';
		$s_order_by = ($s_order_by != '')?'ORDER BY '.$s_order_by :'ORDER BY C.room_id DESC';
		
        $sql    = " SELECT C.*,
						  RC.i_cat_id, 
						  RC.i_parent_cat_id, 
						  CAT.s_category_name 
					FROM flashchat.room C 
					LEFT JOIN cogtime.cg_room_cat RC ON C.room_id = RC.i_room_id 
					LEFT JOIN cogtime.cg_chat_category CAT ON CAT.id = RC.i_cat_id 
					{$where}  {$s_order_by} {$limit}";

        $result     = mysql_query($sql);// echo $this->chat_db->last_query(); exit;
		
       //  $query->result_array(); 
	 
    for ($array = array(); $row = mysql_fetch_assoc($result); 
				isset($row[$key_column]) ? $array[$row[$key_column]] = $row : $array[] = $row);
	
       return $array;
				
    }
	
    public function get_list_count($where='')
    {
        
        		
		 $sql    = " SELECT count(*) as i_total FROM (
		             SELECT C.room_id 
					FROM flashchat.room C 
					LEFT JOIN cogtime.cg_room_cat RC ON C.room_id = RC.i_room_id 
					LEFT JOIN cogtime.cg_chat_category CAT ON CAT.id = RC.i_cat_id 
					{$where}  ) as drvd_tbl";

        $query     = mysql_query($sql);
		$row = mysql_fetch_assoc($query); 
		//echo $row['i_total']; pr($row); exit;
        return $row['i_total'];
    }
	
	public function change_status($status ,$id) {
		
		  $sql = sprintf( "UPDATE {$this->chat_db->CHAT_ROOM} SET `enable` = '%s'
						   WHERE `room_id` ='%s'"
					  , $status, $id );
		  $this->chat_db->query($sql); //echo $this->db->last_query();exit;
		  return true;
	}
	
	
	public function add_room($arr=array()) {
		if(count($arr)==0) {
			return null;
		}
		
		$SQL = "INSERT INTO room
				SET name = '{$arr['name']}' 
				, des = '{$arr['des']}'
				, max_user = '{$arr['max_user']}' ";
		$this->chat_db->query($SQL);
		
		
		//$this->db->insert($this->db->CHAT_ROOM, $arr); //echo $this->db->last_query();
		return $this->chat_db->insert_id();
	}
	
	/* function to get maximum [in time of INSERT action] */
	  function getMaxSequence($where="")
	  {
		  $tbl = 'room';
		  
		  $SQL = sprintf("SELECT IFNULL(MAX(`sequence`)+1,1) AS `max_sequence` FROM %s %s",
									   $tbl, $where);
		  $query = $this->chat_db->query($SQL);
		  $rows = $query->row();

		  return $rows->max_sequence;
	  }
	  
	  ## adding to chat invitaion table
	  
	  public function InsertChatInvitation($arr=array()) {
		if(count($arr)==0) {
			return null;
		}
		$this->db->insert($this->db->CHAT_ROOM_INVITATION, $arr); //echo $this->db->last_query();
		return $this->db->insert_id();
	  }
	  
	  public function get_grpid_by_Chatroom_id($room_id){
		
		  $SQL = sprintf("SELECT i_group_id FROM %s WHERE i_chat_room_id = %s",
									    $this->db->CHAT_ROOM_INVITATION, $room_id);
									   
		  $query     = $this->db->query($SQL); //echo $this->db->last_query();
          $result_arr = $query->result_array(); //pr($result_arr);
          return $result_arr[0]['i_group_id'];
		  
	  }
	  
	   public function join_prayer_meeting($where,$arr,$msg_arr)
	   {
			$this->db->update($this->db->CHAT_ROOM_INVITATION,$arr,$where);
			$this->db->update('messages',  array('i_ended'=>'1'),$msg_arr );
			#echo $this->db->last_query(); exit;
			#exit;
	   }
	   
	   ## fetch Chat room details by group_id
	    public function get_Chatroom_grpid_by($grp_id){
		
		 $SQL = sprintf("SELECT i_chat_room_id FROM %s WHERE i_group_id = %s  ",
									   $this->db->CHAT_ROOM_INVITATION, $grp_id);
									   
		  $query     = $this->db->query($SQL); //echo $this->db->last_query(); 
          $result_arr = $query->result_array(); //pr($result_arr);
          return $result_arr[0]['i_chat_room_id'];
	  }
	   
	   
	   
	   public function checkExistenceChatRoom($room_id){
		   
		  $current_date = date('Y-m-d H:i:s');
		  $sql    = "   SELECT count(*) as count FROM {$this->db->CHAT_ROOM_INVITATION} C
		  				WHERE C.i_chat_room_id = {$room_id} 
						AND C.dt_end_time >= '{$current_date}'  
				      ";
					
		  $query   = $this->db->query($sql); //echo $this->db->last_query();
		  $result_arr = $query->result_array(); //pr($result_arr);
		  if($result_arr[0]['count'] >= 1){
			  return 'true';
		  }
		  else {
			  return 'false';
		  }
	   }
	   
	   
	   
	   
	   ## invited members can only see the chat room
	   public function membersJoining_PrayerMeet($room_id, $grp_id){
		   
		  $sql  = " SELECT C.i_user_id FROM {$this->db->CHAT_ROOM_INVITATION} C
		  				 WHERE C.i_chat_room_id = {$room_id} 
						 AND C.i_group_id = '{$grp_id}'  
				     ";
					
		  $query   = $this->db->query($sql); #echo $this->db->last_query();
		  $result_arr = $query->result_array(); //pr($result_arr);
		 
		  
		  $ret_arr = array();
		  if(count($result_arr)){
			  foreach($result_arr as $key=> $val){
				  $ret_arr[$key]= $val['i_user_id'];
			  }
		  }
		  // pr($ret_arr,1);
		  return $ret_arr;
	   }
	   
	   
	   
	 public function delete_chat_invitation($id) {
	
		## deleting ring cateory 
	     $sql = sprintf( 'DELETE FROM '.$this->db->CHAT_ROOM_INVITATION.' WHERE i_chat_room_id=%s', $id );
		 $this->db->query($sql);
		#echo $this->db->last_query(); exit;
	}
	
	 public function checkRoomID_InvitationTbl($room_id){
		   
		  $sql    = "   SELECT count(*) as count FROM {$this->db->CHAT_ROOM_INVITATION} C
		  				WHERE C.i_chat_room_id = {$room_id} 
				      ";
					
		  $query   = $this->db->query($sql); //echo $this->db->last_query();
		  $result_arr = $query->result_array(); //pr($result_arr);
		  if($result_arr[0]['count'] >= 1){
			  return 'true';
		  }
		  else {
			  return 'false';
		  }
	   }
	   
	/*public function InsertRingChatInvitation($arr=array()) {
		if(count($arr)==0) {
			return null;
		}
		$this->db->insert($this->db->ring_grp_chat_room_invitation, $arr); //echo $this->db->last_query();
		return $this->db->insert_id();
	}*/
}
